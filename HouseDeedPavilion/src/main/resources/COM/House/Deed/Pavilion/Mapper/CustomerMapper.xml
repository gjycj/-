<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="COM.House.Deed.Pavilion.Mapper.CustomerMapper">

    <!-- 通用结果集映射 -->
    <resultMap id="BaseResultMap" type="COM.House.Deed.Pavilion.Entity.Customer">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="gender" property="gender"/>
        <result column="demand" property="demand"/>
        <result column="source" property="source"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <!-- 1. 新增客户信息 -->
    <insert id="insert" parameterType="COM.House.Deed.Pavilion.Entity.Customer"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO customer (
        name,
        phone,
        gender,
        demand,
        source,
        status,
        remark,
        created_at,
        updated_at,
        created_by,
        updated_by
        ) VALUES (
        #{name},
        #{phone},
        #{gender},
        #{demand},
        #{source},
        #{status},
        #{remark},
        NOW(),
        NOW(),
        #{createdBy},
        #{createdBy}  <!-- 新增时更新人=创建人 -->
        )
    </insert>

    <!-- 2. 根据ID查询 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
            id,
            name,
            phone,
            gender,
            demand,
            source,
            status,
            remark,
            created_at,
            updated_at,
            created_by,
            updated_by
        FROM customer
        WHERE id = #{id}
    </select>

    <!-- 3. 根据手机号查询（支持排除自身ID） -->
    <select id="selectByPhone" resultMap="BaseResultMap">
        SELECT
        id,
        name,
        phone,
        gender,
        demand,
        source,
        status,
        remark,
        created_at,
        updated_at,
        created_by,
        updated_by
        FROM customer
        WHERE phone = #{phone}
        <if test="excludeId != null">AND id != #{excludeId}</if>
    </select>

    <!-- 4. 多条件分页查询 -->
    <select id="selectByCondition" parameterType="COM.House.Deed.Pavilion.DTO.CustomerQueryDTO" resultMap="BaseResultMap">
        SELECT
        id,
        name,
        phone,
        gender,
        demand,
        source,
        status,
        remark,
        created_at,
        updated_at,
        created_by,
        updated_by
        FROM customer
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="name != null and name != ''">AND name LIKE CONCAT('%', #{name}, '%')</if>
            <if test="phone != null and phone != ''">AND phone = #{phone}</if>
            <if test="gender != null">AND gender = #{gender}</if>
            <if test="status != null">AND status = #{status}</if>
            <if test="source != null and source != ''">AND source LIKE CONCAT('%', #{source}, '%')</if>
            <if test="createdAtStart != null">AND created_at &gt;= #{createdAtStart}</if>
            <if test="createdAtEnd != null">AND created_at &lt;= #{createdAtEnd}</if>
        </where>
        ORDER BY created_at DESC
    </select>

    <!-- 5. 根据ID更新 -->
    <update id="updateById" parameterType="COM.House.Deed.Pavilion.Entity.Customer">
        UPDATE customer
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="demand != null">demand = #{demand},</if>
            <if test="source != null">source = #{source},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            updated_at = NOW(),
            updated_by = #{updatedBy}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 6. 根据ID删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM customer
        WHERE id = #{id}
    </delete>

</mapper>
